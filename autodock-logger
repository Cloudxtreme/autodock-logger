#!/usr/bin/env python


"""autodock-logger"""


from __future__ import print_function


import sys
from os import environ
from json import loads
from threading import Thread
from argparse import ArgumentDefaultsHelpFormatter, ArgumentParser


from circuits import handler, Event, Component, Debugger


from autodock.node import hello, Node
from autodock.utils import parse_bind


class Logger(Component):

    channel = "docker"

    def container_created(self, event, **data):
        print("Container {} created".format(data["id"][:10]))

    def container_started(self, event, **data):
        print("Container {} started".format(data["id"][:10]))

    def container_stopped(self, event, **data):
        print("Container {} stopped".format(data["id"][:10]))

    def container_died(self, event, **data):
        print("Container {} died".format(data["id"][:10]))

    def container_killed(self, event, **data):
        print("Container {} killed".format(data["id"][:10]))

    def container_destroyed(self, event, **data):
        print("Container {} destroyed".format(data["id"][:10]))


class App(Component):

    def init(self, args):
        if args.debug:
            Debugger().register(self)

        bind = parse_bind(args.bind)
        url = parse_bind(args.url)

        self.node = Node(*bind).register(self)
        self.node.send(hello(), url)

        Logger().register(self)


def parse_args():
    parser = ArgumentParser(
        description=__doc__,
        formatter_class=ArgumentDefaultsHelpFormatter
    )

    parser.add_argument(
        "-b", "--bind", action="store", dest="bind", metavar="INT", type=str,
        default=environ.get("BIND", "0.0.0.0:1338"),
        help="Interface and Port to Bind to"
    )

    parser.add_argument(
        "-d", "--debug", action="store_true", dest="debug",
        default=environ.get("DEBUG", False),
        help="Enable Debug Mode"
    )

    parser.add_argument(
        "-u", "--url", action="store", dest="url", metavar="URL", type=str,
        default=environ.get("URL", environ.get("AUTODOCK_PORT", "udp://127.0.0.1:1338")),
        help="autodock Daemon URL"
    )

    return parser.parse_args()


def main():
    App(parse_args()).run()


if __name__ == "__main__":
    main()
